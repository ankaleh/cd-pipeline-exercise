{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","components/Togglable.js","components/LoginForm.js","components/SaveForm.js","App.js","index.js"],"names":["Blog","blog","updateBlog","deleteBlog","user","useState","showAll","setShowAll","showOrNotToShow","event","preventDefault","hideWhenVisible","display","showWhenVisible","showToCreator","username","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","id","author","title","onClick","url","likes","updatedBlog","baseUrl","token","request","getAll","axios","get","then","response","data","setToken","newToken","create","newBlog","a","config","headers","Authorization","post","update","put","remove","delete","login","credentials","Notification","message","errorMessage","color","background","fontSize","borderStyle","borderRadius","padding","Togglable","props","visible","setVisible","toggleVisibility","buttonLabel","children","LoginForm","onSubmit","handleLogin","type","value","name","onChange","target","setUsername","password","setPassword","SaveForm","addBlog","setTitle","setAuthor","setUrl","handleSaveBlog","App","blogs","setBlogs","setUser","setMessage","setErrorMessage","blogService","concat","setTimeout","console","log","map","b","window","confirm","filter","localStorage","setItem","JSON","stringify","nimi","useEffect","loggedUserJSON","getItem","parse","sortBlogs","sort","removeItem","location","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c19dba6.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, updateBlog, deleteBlog, user }) => {\n  const [showAll, setShowAll] = useState(false)\n  const showOrNotToShow = (event) => {\n    event.preventDefault()\n    setShowAll(!showAll)\n  }\n\n  const hideWhenVisible = { display: showAll ? 'none' : '' }\n\n  const showWhenVisible = { display: showAll ? '' : 'none' }\n\n  const showToCreator = { display: user.username===blog.user.username && showAll ? '' : 'none' }\n\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const handleLike = (event) => {\n    event.preventDefault()\n    const updatedBlog = {\n      user: blog.user,\n      author: blog.author,\n      likes: blog.likes+1,\n      title: blog.title,\n      url: blog.url,\n      id: blog.id\n    }\n    updateBlog(updatedBlog, updatedBlog.likes, updatedBlog.id)\n  }\n\n  const handleDelete = (event) => {\n    event.preventDefault()\n    deleteBlog(blog.id)\n  }\n\n\n  return (\n    <div style={blogStyle} className='blog'>\n      <p id='authorAndTitle'>{blog.author}: {blog.title}</p>\n      <button id='nayta' style={hideWhenVisible} onClick={showOrNotToShow}>Näytä blogin tiedot</button>\n      <div id='showWhenVisible' style={showWhenVisible}>\n        <p id='url'><b>url:</b> {blog.url}</p>\n        <p id='tykkayksia'>\n          <b>tykkäyksiä:</b> {blog.likes}\n          <button id='tykkaa' onClick={handleLike}>Tykkää</button>\n        </p>\n        <button id='poistaBlogiNappi' style={showToCreator}  onClick={handleDelete}>Poista blogi</button>\n        <button id='suljeNappi'onClick={showOrNotToShow}>Sulje</button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (id, updatedBlog) => {\n  const response = await axios.put(`${baseUrl}/${id}`, updatedBlog)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst request = { getAll, setToken, create, update, remove }\n\nexport default request","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nexport const login = async credentials => {\n\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\n","import React from 'react'\n\nconst Notification = ({ message, errorMessage }) => {\n  const messageStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const errorMessageStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if (message===null && errorMessage===null) {\n    return null\n  }\n\n  if (errorMessage!==null) {\n    return (\n      <div className='error' style={errorMessageStyle}>\n        {errorMessage}\n      </div>\n    )\n  }\n  return (\n    <div className='message' style={messageStyle}>\n      {message}\n    </div>\n\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className='togglableContent'>\n        {props.children}\n        <button onClick={toggleVisibility}>Keskeytä toiminto</button>\n      </div>\n    </div>\n  )\n}\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\n\nconst LoginForm = (props) => (\n  <div>\n    <h2>Kirjaudu sisään alla olevalla lomakkeella</h2>\n\n    <form onSubmit={props.handleLogin}>\n      <div>Käyttäjätunnus</div>\n      <input type=\"text\" value={props.username} name=\"Username\"\n        onChange={({ target }) => props.setUsername(target.value)}\n      />\n      <div>Salasana</div>\n      <input type=\"password\" value={props.password} name=\"Password\"\n        onChange={({ target }) => props.setPassword(target.value)}\n      />\n      <button type=\"submit\" id='kirjaudu'>Kirjaudu</button>\n    </form>\n\n  </div>\n\n)\n\nexport default LoginForm","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SaveForm = ({ addBlog }) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleSaveBlog = async (event) => {\n    event.preventDefault()\n    const blog = {\n      title, author, url,\n    }\n    addBlog(blog, author, title)\n    setAuthor('')\n    setTitle('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>Tallenna uusi blogi</h2>\n\n      <form id='lomake' onSubmit={handleSaveBlog}>\n\n        <div>Title:</div>\n        <input id='title' type=\"text\" value={title} name=\"Title\"\n          onChange={({ target }) => setTitle(target.value)}\n        />\n        <div>Author:</div>\n        <input id='author' type=\"text\" value={author} name=\"Author\"\n          onChange={({ target }) => setAuthor(target.value)}\n        />\n        <div>Url:</div>\n        <input id='uri' type=\"text\" value={url} name=\"Url\"\n          onChange={({ target }) => setUrl(target.value)}\n        />\n        <button id='tallenna' type=\"submit\">Tallenna</button>\n\n      </form>\n    </div>\n  )\n}\n\nSaveForm.propTypes = {\n  addBlog: PropTypes.func.isRequired\n}\n\nexport default SaveForm","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport { login } from './services/login'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport SaveForm from './components/SaveForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n\n  const [ message, setMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  const addBlog = async (newBlog, author, title) => {\n    try {\n      const blog = await blogService.create(newBlog)\n\n      setBlogs(blogs.concat(blog))\n\n      setMessage(`Uusi blogi lisättiin: ${author}, ${title}.`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n    }  catch (exception) {\n      setErrorMessage('Blogin lisääminen ei onnistunut. Yritä uudelleen.')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      console.log('Virhe!') // eslint-disable-line\n\n    }\n  }\n\n  const updateBlog = async (updatedBlog, likes, id) => {\n    try {\n      await blogService.update(id, updatedBlog)\n      setMessage(`Blogilla on nyt tykkäyksiä: ${likes}.`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n      setBlogs(\n        blogs.map(b => b.id !== id ? b : updatedBlog)\n      )\n\n    }  catch (exception) {\n      setErrorMessage('Blogin päivittäminen ei onnistunut. Yritä uudelleen.')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      console.log('Virhe!') // eslint-disable-line\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    if (window.confirm('Haluatko varmasti poistaa blogin?')) {\n\n\n      try {\n        console.log(id) // eslint-disable-line\n        await blogService.remove(id)\n        setMessage('Blogin poistaminen onnistui!')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n\n        setBlogs(\n          blogs.filter(b => b.id !== id)\n        )\n\n      }  catch (exception) {\n        setErrorMessage('Blogin poistaminen ei onnistunut. Yritä uudelleen.')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        console.log('Virhe!') // eslint-disable-line\n      }\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await login({\n        username, password,\n      })\n      window.localStorage.setItem('kirjautunutKayttaja', JSON.stringify(user))\n      //jos kirjautuminen onnistuu:\n      setUser(user)\n      setMessage(`Kirjautuminen onnistui. Tervetuloa, ${user.nimi}!`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      setUsername('')\n      setPassword('')\n      blogService.setToken(user.token)\n\n    } catch (exception) {\n      setErrorMessage('Kirjautuminen ei onnistunut. Tarkista käyttäjätunnus ja salasana.')\n      console.log('Virhe!') // eslint-disable-line\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('kirjautunutKayttaja')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const sortBlogs = blogs.sort((a, b) => b.likes - a.likes)\n\n  if (user === null) {\n\n    return (\n      <div>\n\n        <Notification message = {message} errorMessage={errorMessage}/>\n\n        <Togglable buttonLabel='Kirjautumislomake'>\n          <LoginForm username={username} password={password} setUsername ={setUsername} setPassword={setPassword} handleLogin={handleLogin} />\n        </Togglable>\n\n      </div>\n    )\n  }\n\n\n  return (\n    <div>\n      <p>{user.nimi} kirjautuneena palveluun.</p>\n      <button onClick={() => {\n        window.localStorage.removeItem('kirjautunutKayttaja')\n        window.location.reload()}}>\n      Kirjaudu ulos\n      </button>\n\n      <Notification message = {message} errorMessage={errorMessage}/>\n\n      {sortBlogs.map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} deleteBlog={deleteBlog} user={user}/>\n      )}\n\n      <Togglable buttonLabel='Lomake, jolla voit tallentaa uuden blogin'>\n        <SaveForm addBlog={addBlog} />\n      </Togglable>\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}